---
import { type CollectionEntry, getCollection } from "astro:content";
import formatDate from "@/lib/formatDate";

import { buttonVariants } from "@/components/ui/button";
import LinkList from "@/components/LinkList.astro";
import TagList from "@/components/TagList";
import Layout from "@/layouts/Layout.astro";
import Markdown from "@/layouts/Markdown.astro";
import { Badge } from "@/components/ui/badge";
import WipBadge from "@/components/badges/WipBadge";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<"projects">;
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout title={entry.data.title}>
  <div class="container pt-8 bg-gradient-to-b from-background to-transparent">
    <div class="flex gap-2 items-center justify-between">
      <h1 class="text-4xl font-bold">{entry.data.title}</h1>
      {entry.data.wip && <WipBadge />}
    </div>
    <p class="opacity-70">{formatDate(entry.data.date)}</p>
    <br />
  </div>
  <div class="container space-y-2">
    <TagList tags={entry.data.tags} />
    <LinkList links={entry.data.links} />
  </div>
  <div class="container pt-8">
    <Markdown>
      <Content />
    </Markdown>
    <div class="flex justify-center pt-20 pb-10">
      <a href="/" class={buttonVariants({ variant: "invert", size: "lg" })}>
        More Projects
      </a>
    </div>
  </div>
</Layout>
@/components/badges/WipBadge